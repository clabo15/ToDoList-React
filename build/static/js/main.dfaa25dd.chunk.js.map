{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","display","justifyContent","alignItems","marginTop","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfaa25dd.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    \r\n    return <button onClick={onClick} style={{backgroundColor: color}} className='btn'>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n//{title} is the destructure of object props\r\nconst Header = ({title, onAdd, showAdd }) => {\r\n\r\n    const location =useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            \r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && (<Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>)}\r\n               \r\n        </header>\r\n    )\r\n}\r\n\r\n//default prop\r\nHeader.defaultProps = {\r\n    title: 'To Do List'\r\n}\r\n\r\n//Sets the prop type of the object 'title' to string\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n//CSS in js\r\n/* use this for the below to work\r\n<h1 style={headingStyle}>{title}</h1>     \r\nconst headingStyle = {\r\n    color: 'red',\r\n    backgroundColor: 'black'\r\n} */\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ( { task, onDelete, onToggle } ) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)} /> </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n          {tasks.map((task, index) => (<Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} /> ))}  \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ( { onAdd } ) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd( { text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Made By Curtis Laborde</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst About = () => {\r\n    return (\r\n        <about>\r\n            <h3>My First React Project</h3>\r\n            <p>This is my first project using React and NodeJS.</p>\r\n            <Link to='/' style={{display: 'flex', justifyContent:'center', alignItems:'center', marginTop: '100px'}}>Go Back</Link>\r\n        </about>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n/* use this for the below to work\r\n<h1 style={headingStyle}>{title}</h1>     \r\nconst headingStyle = {\r\n    color: 'red',\r\n    backgroundColor: 'black'\r\n} */\r\n\r\nexport default About\r\n","//usestate Hook\nimport { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\n//import React from 'react'\n const App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  \n\n    useEffect(() => {\n      const getTasks = async () => {\n        const tasksFromServer = await fetchTasks()\n        setTasks(tasksFromServer)\n      }\n\n      getTasks()\n    }, [])\n\n    // Fetch Tasks\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json()\n\n      //console.log(data)\n      return data\n    }\n\n    // Fetch Task\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await res.json()\n\n      //console.log(data)\n      return data\n    }\n\n    // Add Task\n    const addTask = async (task) => {\n      const res = await fetch('http://localhost:5000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      })\n\n      const data = await res.json()\n\n      setTasks([...tasks, data])\n\n\n     /*  const id = Math.floor(Math.random() * 10000) + 1\n      const newTask = { id, ...task }\n      setTasks([...tasks, newTask]) */\n    }\n\n    // Delete Task\n    const deleteTask = async (id) => {\n        await fetch(`http://localhost:5000/tasks/${id}`,{\n          method: 'DELETE',\n        })\n\n      //console.log('delete', id)\n      setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    // Toggle Reminder\n    const toggleReminder = async (id) => {\n      const taskToToggle = await fetchTask(id)\n      const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n      const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask)\n      })\n\n      const data = await res.json()\n\n      //console.log(id)\n      setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n    }\n\n  return (\n    <Router>\n    <div className=\"container\">\n     <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     \n\n     <Route path='/' exact render={(props) => (\n       <>\n        {showAddTask && <AddTask onAdd={addTask} />}\n        {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No Tasks Available')}\n       </>\n     )}\n     />\n    \n    <Route path='/about' component={About} />\n    <Footer />\n    </div>\n    </Router>\n  )\n} \n\n//Using a class instead\n/* class App extends React.Component{\n  render(){\n    return <h1>Hello from class</h1>\n  }\n} */\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}